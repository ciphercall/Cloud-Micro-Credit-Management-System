@using cloud_Api_MCR.Models
@using cloud_Api_MCR.Models.Account_DTO
@using cloud_Api_MCR.Models.ASL_DTO
@using cloud_Api_MCR.Models.MCR_DTO
@model cloud_Api_MCR.Models.MCR_DTO.ViewMcrMLoan
@{
    ViewBag.Title = "Index";

    if (HttpContext.Current.Session["loggedToken"] == null)
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    var loggedToken = HttpContext.Current.Session["loggedToken"]?.ToString();
    var loggedUserTp = HttpContext.Current.Session["loggedUserType"].ToString();
    var loggedUserStatus = HttpContext.Current.Session["loggedUserStatus"].ToString();
    var loggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    var loggedUserId = HttpContext.Current.Session["loggedUserID"].ToString();
    if ((loggedUserTp == "CADMIN" || loggedUserTp == "UADMIN" || loggedUserTp == "USER") && loggedUserStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }


    var createStatus = "";
    var updateStatus = "";
    var deleteStatus = "";
    var viewStatus = "";
    if ((loggedUserTp == "CADMIN" || loggedUserTp == "UADMIN" || loggedUserTp == "USER") && loggedUserStatus == "A")
    {
        ViewAslRole roleInfo = new ViewAslRole();
        roleInfo = (ViewAslRole)TempData["UserRoleInfo"];
        viewStatus = roleInfo.Status;
        createStatus = roleInfo.Insertr;
        updateStatus = roleInfo.Updater;
        deleteStatus = roleInfo.Deleter;
    }

    if (viewStatus == "I")
    {
        Response.Redirect("~/GraphView/Index");
    }



    //Member loaded in DropdownList
    List<SelectListItem> listOfMemberName = new List<SelectListItem>();
    List<ViewMcrMember> passDataMember = new List<ViewMcrMember>();
    if (TempData["passData_SelectMemberList"] != null)
    {
        passDataMember = (List<ViewMcrMember>)TempData["passData_SelectMemberList"];
        foreach (var n in passDataMember)
        {
            listOfMemberName.Add(new SelectListItem { Text = n.Membernm, Value = n.Memberid.ToString() });
        }
    }


    List<ViewMcrMLoan> memberLoanList = new List<ViewMcrMLoan>();
    if (TempData["passData_MemberLoanList"] != null)
    {
        memberLoanList = (List<ViewMcrMLoan>)TempData["passData_MemberLoanList"];
    }
}


<link href="~/Content/bootstrap-Datepicker/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap-Datepicker/datepicker3.css" rel="stylesheet" />
<script src="~/Content/bootstrap-Datepicker/bootstrap-datepicker.js"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div id="contentHeaderBox">
        @if (TempData["MemmberLoanMessage"] != null)
        {
            <h1 style="padding-left: 16px">
                Member Loan List - &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <span style="color: #c71817; font-style: italic;">@TempData["MemmberLoanMessage"]</span>
            </h1>
        }
        else
        {
            <h1 style="padding-left: 16px">
                Member Loan List
            </h1>
        }
    </div>
    <br />
    <div class="col-md-12">
        <div class="form-group">
            <div class="row">
                <div class="col-md-2" Style="text-align: right">
                    @Html.Label("Month", htmlAttributes: new {@class = "control-label"})
                </div>
                <div class="col-md-3">
                    @if (TempData["passData_MonthYear"] != null)
                    {
                        @Html.TextBoxFor(model => model.Transmy, htmlAttributes: new { id = "txtTransMonthYear", @class = "form-control input-sm", @autofocus = "true", tabindex = "1", @Value= TempData["passData_MonthYear"] })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.Transmy, htmlAttributes: new { id = "txtTransMonthYear", @class = "form-control input-sm", @autofocus = "true", tabindex = "1" })
                    }
                    
                </div>
                <div class="col-md-3">
                    <input type="submit" class="btn btn-success btn-block" value="Search" name="command" />
                </div>
                <div class="col-md-3">
                    <input type="submit" class="btn btn-default btn-block" value="Create" name="command" />
                </div>
            </div>
        </div>
    </div>
    <br />

    <div class="col-md-12">
        <div class="panel panel-primary">
            <div class="panel-heading">Member Loan List - Current Month</div>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>
                                Date
                            </th>
                            @*<th>
                                Memo No
                            </th>*@
                            <th>
                                Scheme
                            </th>
                            <th>
                                Member Name
                            </th>
                            <th>
                                Internal ID
                            </th>
                            <th>
                                Loan Amount
                            </th>
                            <th>
                                Profit Amount
                            </th>
                            <th>
                                Service Amount
                            </th>
                            <th>
                                Disburse Amount
                            </th>
                            @*<th>
                                Risk Fund (%)
                            </th>*@
                            <th>
                                Collect Amount
                            </th>
                            <th>
                                Interest (%)
                            </th>
                            <th>
                                Scheme Qty
                            </th>
                            <th>
                                Effect From
                            </th>
                            <th>
                                Effect To
                            </th>
                            <th></th>
                        </tr>
                    </thead>


                    @foreach (var item in memberLoanList)
                    {
                        String date = Convert.ToString(item.Transdt.ToString("dd/MM/yy"));
                        String memberName = "";
                        foreach (var n in passDataMember)
                        {
                            if (n.Memberid == item.Memberid)
                            {
                                memberName = n.Membernm;
                            }
                        }
                        <tbody>
                            <tr>
                                <td>
                                    @date
                                </td>
                                @*<td>
                                    @Html.DisplayFor(modelItem => item.Transno)
                                </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.Schemeid)
                                </td>
                                <td>
                                    @memberName
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Internid)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Loanamt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Pchargeamt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Schargeamt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Disburseamt)
                                </td>
                                @*<td>
                                    @Html.DisplayFor(modelItem => item.Riskfundrt)
                                </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.Collectamt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Interestrt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Schemeiqty)
                                </td>
                                <td>
                                    @item.Schemeefdt
                                </td>
                                <td>
                                    @item.Schemeetdt
                                </td>
                                <td>
                                    @if (updateStatus == "A")
                                    {
                                        @Html.ActionLink("Edit |", "Edit", new { monthYear = item.Transmy, transNo = item.Transno })
                                    }
                                    @if (deleteStatus == "A")
                                    {
                                        @Html.ActionLink("Delete", "Delete", new { monthYear = item.Transmy, transNo = item.Transno })
                                    }
                                </td>
                            </tr>
                        </tbody>
                    }

                </table>
            </div>
        </div>
    </div>




    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>


    <script type="text/javascript">

        $(document).ready(function () {
            
            $('#txtTransMonthYear').datepicker({
                format: "M-yy",
                startView: "months",
                minViewMode: "months"
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function (e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
            });

        });
    </script>
}



