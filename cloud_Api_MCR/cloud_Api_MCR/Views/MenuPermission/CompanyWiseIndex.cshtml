@using cloud_Api_MCR.Models
@using cloud_Api_MCR.Models.ASL_DTO
@model cloud_Api_MCR.Models.ASL_DTO.ViewAslRole
@{
    ViewBag.Title = "CompanyWiseIndex";

    if (HttpContext.Current.Session["loggedToken"] == null)
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    var loggedToken = HttpContext.Current.Session["loggedToken"]?.ToString();
    var loggedUserTp = HttpContext.Current.Session["loggedUserType"].ToString();
    var loggedUserStatus = HttpContext.Current.Session["loggedUserStatus"].ToString();
    var loggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    var loggedUserId = HttpContext.Current.Session["loggedUserID"].ToString();
    if (loggedUserTp == "SADMIN" && loggedUserStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }




    // Comapny Field loaded in DropdownList
    List<SelectListItem> listOfCompany = new List<SelectListItem>();
    List<ViewAslCompany> passDataComapnyList = (List<ViewAslCompany>)TempData["passData_SelectCompanyList"];
    foreach (var n in passDataComapnyList)
    {
        listOfCompany.Add(new SelectListItem { Text = n.Compnm, Value = n.Compid.ToString() });
    }

    // Module Field loaded in DropdownList
    List<SelectListItem> listOfModule = new List<SelectListItem>();
    List<ViewAslMenumst> passDataModuleList = (List<ViewAslMenumst>)TempData["passData_SelectModuleList"];
    foreach (var n in passDataModuleList)
    {
        listOfModule.Add(new SelectListItem { Text = n.Modulenm, Value = n.Moduleid });
    }

    List<SelectListItem> listOfMenuType = new List<SelectListItem>();
    listOfMenuType.Add(new SelectListItem { Text = "Form", Value = "F" });
    listOfMenuType.Add(new SelectListItem { Text = "Report", Value = "R" });

    List<SelectListItem> gridlistOfStatus = new List<SelectListItem>();
    gridlistOfStatus.Add(new SelectListItem { Text = "Active", Value = "Active" });
    gridlistOfStatus.Add(new SelectListItem { Text = "Inactive", Value = "Inactive" });
}


<link href="~/Content/Angular-File/ng-grid.css" rel="stylesheet" />



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Permission Menu - comapny wise</h1>
    </div>
    <br />


    <div class="col-md-12">
        <div class="form-group">
            <div ng-app="MenuPermissionApp" data-ng-controller="ApiRoleController">
                @Html.HiddenFor(model => model.Compid, new { id = "txtCid", @Value = loggedCompId })
                @Html.HiddenFor(model => model.Insuserid, new { id = "txtUid", @Value = loggedUserId })
                @Html.HiddenFor(model => model.Token, new { id = "txtTid", @Value = loggedToken })
                @Html.HiddenFor(model => model.Updltude, new { id = "latlon" })
                <input id="lat" type="hidden" />
                <input id="lon" type="hidden" />

                <div class="row">
                    <form>
                        <div class="col-md-2">
                            @Html.Label("name", "Comapny Name", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.SelectCompId, listOfCompany, "--Select--", new { id = "ddlCompanyId", @class = "form-control", autofocus = true })
                        </div>
                    </form>
                </div>
                <div class="row">
                    <form>
                        <div class="col-md-2">
                            @Html.Label("name", "Module Name", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Moduleid, listOfModule, "--Select--", new { id = "ddlModuleId", @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.Label("name", "Menu Type", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Menutp, listOfMenuType, "--Select--", new { id = "ddlMenuTypeId", @class = "form-control" })
                        </div>
                        <input type="submit" value="Search" data-ng-click="search($event)" class="btn btn-primary" id="btnSearch" style="display: none" />
                    </form>
                </div>
                <br />

                <div class="row">
                    @*<div class="col-md-1">
                        </div>*@
                    <div class="col-md-12">
                        <div class="panel panel-primary">
                            <div class="panel-heading">Information</div>
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <tr>
                                        <th @*style="width: 30%"*@>Serial </th>
                                        <th @*style="width: 30%"*@>Menu Name </th>
                                        <th @*style="width: 20%"*@>Status </th>
                                        <th @*style="width: 10%"*@></th>
                                    </tr>
                                    <tr data-ng-repeat="testitem in RoleData">
                                        <td hidden><strong data-ng-hide="testitem.editMode">{{testitem.Compid}}</strong></td>
                                        <td hidden><p data-ng-hide="testitem.editMode">{{ testitem.Moduleid }}</p></td>
                                        <td hidden><p data-ng-hide="testitem.editMode">{{ testitem.Menutp }}</p></td>
                                        <td hidden><p data-ng-hide="testitem.editMode">{{ testitem.Menuid }}</p></td>
                                        <td style="text-align: left;">
                                            <p data-ng-hide="testitem.editMode">{{ testitem.Serial }}</p>
                                        </td>
                                        <td style="text-align: left;">
                                            <p data-ng-hide="testitem.editMode">{{ testitem.Menuname }}</p>
                                            <input class="form-control" data-ng-show="testitem.editMode" type="text" data-ng-model="testitem.Menuname" readonly="readonly" />
                                        </td>
                                        <td style="text-align: left;">
                                            <p data-ng-hide="testitem.editMode">{{ testitem.Status }}</p>
                                            @Html.DropDownListFor(model => model.Status, gridlistOfStatus, new { id = "gridStatusId", data_ng_show = "testitem.editMode", data_ng_model = "testitem.Status", @class = "form-control" })
                                        </td>
                                        <td>
                                            <p data-ng-hide="testitem.editMode"><a data-ng-click="toggleEdit(testitem)" href="javascript:;">Edit</a></p>
                                            <p data-ng-show="testitem.editMode"><a data-ng-click="update(testitem)" href="javascript:;">Save</a> | <a data-ng-click="toggleEdit_Cancel(testitem)" href="javascript:;">Cancel</a></p>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-1">
                        </div>*@
                </div>
            </div>
        </div>
    </div>




    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>


    <script type="text/javascript">

        $(document).ready(function () {

            $('#ddlCompanyId').change(function () {
                $('#btnSearch').click();
            });

            $('#ddlModuleId').change(function () {
                $('#btnSearch').click();
            });

            $('#ddlMenuTypeId').change(function () {
                $('#btnSearch').click();
            });

        });
    </script>
}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>

<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>
<script src="~/Scripts/ViewScripts/MenuPermission/_CompanyWiseIndex.js"></script>
<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>