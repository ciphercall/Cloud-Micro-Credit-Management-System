@using cloud_Api_MCR.Models
@using cloud_Api_MCR.Models.MCR_DTO
@model cloud_Api_MCR.Models.MCR_DTO.ViewMcrReportModel

@{
    ViewBag.Title = "MemberLedger";
    if (HttpContext.Current.Session["loggedToken"] == null)
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    var loggedUserTp = HttpContext.Current.Session["loggedUserType"].ToString();
    var loggedUserStatus = HttpContext.Current.Session["loggedUserStatus"].ToString();
    if ((loggedUserTp == "CADMIN" || loggedUserTp == "UADMIN" || loggedUserTp == "USER") && loggedUserStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    // Scheme loaded in DropdownList
    List<SelectListItem> listOfScheme = new List<SelectListItem>();
    if (TempData["passData_SelectSchemeList"] != null)
    {
        List<ViewMcrScheme> passSchemeList = (List<ViewMcrScheme>)TempData["passData_SelectSchemeList"];
        foreach (var n in passSchemeList)
        {
            listOfScheme.Add(new SelectListItem { Text = n.Schemeid, Value = n.Schemeid.ToString() });
        }
    }


    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);
}


<link href="~/Content/bootstrap-Datepicker/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap-Datepicker/datepicker3.css" rel="stylesheet" />
<link href="~/Content/select2-4.0.3/css/select2.css" rel="stylesheet" /> <!--Select2 DropDown with Box -->
<script src="~/Content/bootstrap-Datepicker/bootstrap-datepicker.js"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div id="contentHeaderBox">
        <h1 style="padding-left: 16px;">Member Ledger</h1>
    </div>
    <br />

    <div class="col-md-12">
        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("Scheme Name", htmlAttributes: new {  @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.Schemeid, listOfScheme, "- Select -", htmlAttributes: new { id = "idscheme", @class = "form-control", @tabindex = "1" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("Internal ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.Internid, new SelectList(string.Empty, "Value", "Text"), htmlAttributes: new { id = "txtInternId", @class = "form-control input-sm", tabindex = "2" })
                </div>
                <div class="col-md-3">
                    @Html.Label("Member Name", htmlAttributes: new {  @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Membernm, htmlAttributes: new { id = "idMemberName", @class = "form-control",  @readonly = "readonly" })
                    @Html.HiddenFor(model => model.Memberid, htmlAttributes: new { id = "idMember", @class = "form-control" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("From Date: ",htmlAttributes: new {  @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.FromDate, new {id = "fromDate", @class = "form-control", @Value = currentDateTime.ToString("dd-MMM-yyyy"), @tabindex = "3"})
                    @Html.ValidationMessageFor(model => model.FromDate, "", new {@class = "text-danger"})
                </div>
                <div class="col-md-3">
                    @Html.Label("To Date: ",htmlAttributes: new {  @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ToDate, new { id = "toDate", @class = "form-control", @Value = currentDateTime.ToString("dd-MMM-yyyy"), @tabindex = "4" })
                    @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <br />
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-6">
                    <input type="submit" class="btn btn-success" value="Print" formtarget="_blank" />
                </div>
            </div>
        </div>
    </div>



    <script type="text/javascript">
        $(document).ready(function() {

            $('#fromDate').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                }
                else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function (e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("toDate").focus();
            });



            $('#toDate').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                }
                else {
                    $(this).data('stickyDate', null);
                }
            }).on('hide', function (e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
            });

            $('#idscheme').select2({
                placeholder: 'Select an option'
            });

            $('#idscheme').change(function () {
                $("#idMemberName").val(" ");
                var schemeid = $('#idscheme').val();
                $.ajax
                ({
                    url: '@Url.Action("InternalIdLoadAfterSchemeSelect", "MemberTransaction")',
                    type: 'post',
                    dataType: "json",
                    data: { schemeId: schemeid },
                    success: function (data) {
                        $("#txtInternId").empty();
                        $("#txtInternId").append('<option value="'
                            + '">'
                            + "--Select--" + '</option>');
                        $.each(data, function (i, memo) {

                            $("#txtInternId").append('<option value="'
                                + memo.Value + '">'
                                + memo.Text + '</option>');
                        });
                    }
                });
                document.getElementById("txtInternId").focus();
            });


            $('#txtInternId').change(function () {
                var txtInternId = $('#txtInternId').val();
                var txtSchemeId = $('#idscheme').val();

                var txtMemberName = document.getElementById('idMemberName');
                var txtMember = document.getElementById('idMember');
                $("#idMemberName").val(" ");
                $("#idMember").val(" ");
                $.getJSON(
                    "/MemberTransaction/GetMemberName", { "TxtInternId": txtInternId, "TxtSchemeId": txtSchemeId },
                    function (myData) {
                        txtMemberName.value = myData.MemberName;
                        txtMember.value = myData.MemberId;
                        document.getElementById("idscheme2").focus();
                    });
            });

        });
    </script>
}


<script src="~/Content/select2-4.0.3/js/select2.full.min.js"></script> <!--Select2 DropDown with Box -->
