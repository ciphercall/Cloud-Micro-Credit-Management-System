@using System.Web.UI.WebControls
@model cloud_Api_MCR.Models.ASL_DTO.ViewAslCompany

@{

    ViewBag.Title = "Create";

    if (HttpContext.Current.Session["loggedToken"] == null)
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var loggedUserTp = HttpContext.Current.Session["loggedUserType"].ToString();
    var loggedUserStatus = HttpContext.Current.Session["loggedUserStatus"].ToString();
    if (loggedUserTp == "SADMIN" && loggedUserStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }


    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem { Text = "Active", Value = "A" });
    listItems.Add(new SelectListItem { Text = "Inactive", Value = "I" });

    var comco = "";
    comco = "880";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div id="contentHeaderBox">
        <h1>Create Company</h1>
    </div>
    <br />
        <div class="col-md-12">
            @if (ViewBag.CreateMessage != null)
            {
                <div class="panel-heading text-center">
                    <h4 style="color: #226699">@ViewBag.CreateMessage</h4>
                </div>
            }
            <div class="form-group">

                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Compnm, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Compnm, htmlAttributes: new { @class = "form-control", autofocus = true })
                        @Html.ValidationMessageFor(model => model.Compnm, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    </div>

                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Address, htmlAttributes: new { @class = "form-control", maxlength = "90" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>



                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label" })
                    </div>

                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Address2, htmlAttributes: new { @class = "form-control", maxlength = "90" })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                    </div>
                </div>


                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Contactno, htmlAttributes: new { @class = "control-label" })
                    </div>

                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Contactno, htmlAttributes: new { @class = "form-control", @Value = comco })
                        @Html.ValidationMessageFor(model => model.Contactno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Emailid, htmlAttributes: new { @class = "control-label" })
                    </div>

                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Emailid, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Emailid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Webid, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Webid, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Webid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Status, listItems, "--Select Status--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.Label("name", "Promotion Email ID: ", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Emailidp, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Emailidp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.Label("name", "Promotion Email Password: ", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.PasswordFor(model => model.Emailpwp, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Emailpwp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.Label("name", "SMS Sender Name: ", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Smssendernm, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Smssendernm, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.Label("name", "Promotion SMS ID: ", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Smsidp, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Smsidp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-3">
                        @Html.Label("name", "Promotion SMS Password: ", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.PasswordFor(model => model.Smspwp, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Smspwp, "", new { @class = "text-danger" })
                    </div>
                </div>



                @Html.TextBoxFor(model => model.Insltude, new { id = "latlon", style = "display: none;" })
                <input id="lat" type="hidden" />
                <input id="lon" type="hidden" />

                <br />
                <div class="row">
                    <div class="col-md-3"></div>
                    <div class="col-md-5">
                        <input type="submit" class="btn btn-primary btn-block" value="Create" />
                    </div>

                </div>
            </div>
        </div>


        <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

        <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                                    $("#lat").val() + "," + $("#lon").val()
                                );
            }
        });
        </script>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}








